;; === Cursor: A Parsing Expression Grammar Library ===
;;
;;  --------------------------------------------
;; | Cursor                   | PEG             |
;; |--------------------------+-----------------|
;; | empty                    | Îµ               |
;; |--------------------------+-----------------|
;; | any                      | .               |
;; |--------------------------+-----------------|
;; | (char #\x)               | "x"             |
;; |--------------------------+-----------------|
;; | (maybe p)                | p?              |
;; |--------------------------+-----------------|
;; | (repeat p)               | p*              |
;; |--------------------------+-----------------|
;; | (repeat+1 p)             | p+              |
;; |--------------------------+-----------------|
;; | (is? p)                  | &p              |
;; |--------------------------+-----------------|
;; | (is-not? p)              | !p              |
;; |--------------------------+-----------------|
;; | (and-then px py)         | px py           |
;; |--------------------------+-----------------|
;; | (or-else px py)          | px / py         |
;; |--------------------------+-----------------|
;; | (one-of "xyz")           | [xyz]           |
;; |--------------------------+-----------------|
;; | (none-of "xyz")          | [^xyz]          |
;; |--------------------------+-----------------|
;; | (grammar [rule pattern]) | rule <- pattern |
;;  --------------------------------------------

(library (cursor)
         (export empty
                 fail
                 any
                 char
                 and-then
                 or-else
                 maybe
                 repeat
                 repeat+1
                 is?
                 is-not?
                 one-of
                 none-of
                 rule
                 grammar
                 capture
                 transform
                 text
                 compile)
         (import (cursor core)
                 (cursor compiler)))
